from playwright.sync_api import Playwright, sync_playwright, expect
import os
import zipfile
import csv

        
def format_number(number):
    str_number = str(number)
    
    if len(str_number) < 4:
        return str_number
    else:
        # ‡∏ô‡∏≥‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏£‡∏Å‡∏°‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏•‡∏±‡∏á
        formatted_number = str_number[:-3] + '-' + str_number[-3:]
        return formatted_number[-5:]


def run(playwright: Playwright, username: str, password: str, client_code: str, Account_No: str) -> None:
    # ‡πÉ‡∏ä‡πâ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
    idCode = Account_No
    company_ID = client_code

     
    browser = playwright.chromium.launch(headless=False)
    # executable_path = "/usr/bin/google-chrome"
    # downloads_path = "/home/ags-test-bot/AutoClick/autoClickAccountStatement"
    # browser = playwright.chromium.launch(headless=False,executable_path=executable_path,args=["--no-sandbox","--disable-setuid-sandbox"],downloads_path=downloads_path,channel="stable",chromium_sandbox=False)
    context = browser.new_context()
    page = context.new_page()
    page.goto("https://www.bizgrowing.krungthai.com/corporate/Login.do?cmd=init")



    # ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á Company ID
    page.get_by_role("row", name="Company ID", exact=True).get_by_role("textbox").click()
    page.get_by_role("row", name="Company ID", exact=True).get_by_role("textbox").fill(company_ID)

    # ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á User ID
    page.get_by_role("row", name="User ID", exact=True).get_by_role("textbox").click()
    page.get_by_role("row", name="User ID", exact=True).get_by_role("textbox").fill(username)

    # ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á Password (‡πÉ‡∏ä‡πâ locator ‡∏ï‡∏≤‡∏° id ‡∏Ç‡∏≠‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå)
    page.locator("#password-field").click()
    page.locator("#password-field").fill(password)

    # ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° Login ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
    page.get_by_role("button", name="Login").click()

    # ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå "Download" ‡∏≠‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏•‡∏¥‡∏á‡∏Å‡πå)
    page.get_by_role("link", name="Download").first.click()

    

#‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    page.get_by_role("cell", name="Krungthai Corporate Online :").locator("img").nth(2).click()
    page.get_by_role("link", name="1", exact=True).click()





    # page.pause() # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à //////////


    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ - ‡πÉ‡∏ä‡πâ mapping ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á mapping ‡∏Ç‡∏≠‡∏á Account_No ‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô dropdown
    account_mapping = {
        "2716007306": "6102",
        "2926010214": "6945",
        "4126048820": "6946"
    }

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ idCode ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô mapping ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if idCode in account_mapping:
        dropdown_value = account_mapping[idCode]

        # ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å dropdown
        page.get_by_role("cell", name="Krungthai Corporate Online :").get_by_role("list").click()

        # ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö idCode
        page.locator("#select2-drop").get_by_text(dropdown_value).click()
    else:
        print(f"‡πÑ‡∏°‡πà‡∏û‡∏ö Account_No: {idCode} ‡πÉ‡∏ô mapping")
        # ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        page.get_by_role("cell", name="Krungthai Corporate Online :").get_by_role("list").click()
        page.locator("#select2-drop").get_by_text("6946").click()




# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏∏‡πà‡∏° ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    page.get_by_role("button", name="Search").click()
    page.locator("input[name=\"ch_comcodeAll\"]").check()

    # page.pause() # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à //////////

 

    # --- ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î ---
    page.get_by_role("button", name="Download").click()


    # --- ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ---
    with page.expect_download() as download_info:
        page.get_by_label("", exact=True).get_by_role("button", name="Download").click()

    # ‡πÑ‡∏î‡πâ‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    download = download_info.value

    # ‡∏î‡∏π‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    original_filename = download.suggested_filename
    print(f"üìé ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°: {original_filename}")

    # --- ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå ---
    download_path = os.path.join(os.getcwd(), "Doc_downloads")
    os.makedirs(download_path, exist_ok=True)

    # --- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ---
    file_ext = os.path.splitext(original_filename)[1]  # ‡πÄ‡∏ä‡πà‡∏ô ".zip"
    download_file_name = f"{idCode}{file_ext}"         # ‡πÄ‡∏ä‡πà‡∏ô 123456.zip
    download_file_path = os.path.join(download_path, download_file_name)

    # --- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏•‡∏á‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå ---
    download.save_as(download_file_path)
    print(f"‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà: {download_file_path}")

    # --- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå .zip ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå ---
    if file_ext.lower() == ".zip":
        extract_folder = os.path.join(download_path, f"{idCode}_extracted")
        os.makedirs(extract_folder, exist_ok=True)

        with zipfile.ZipFile(download_file_path, 'r') as zip_ref:
            zip_ref.extractall(extract_folder)
            print(f"üìÇ ‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå ZIP ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏µ‡πà: {extract_folder}")

        # --- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≠‡∏Å ---
        for idx, filename in enumerate(sorted(os.listdir(extract_folder)), start=1):
            old_path = os.path.join(extract_folder, filename)

            # ‡∏Ç‡πâ‡∏≤‡∏°‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            if os.path.isdir(old_path):
                continue

            ext = os.path.splitext(filename)[1]
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
            new_name = f"{idCode}{ext}"  # ‡πÄ‡∏ä‡πà‡∏ô 2716007306_01.csv
            new_path = os.path.join(download_path, new_name)  # ‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≠‡∏Å

            os.rename(old_path, new_path)
            print(f"üì§ ‡∏¢‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ {filename} ‚Üí {new_name}")

        # --- ‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ) ---
        os.rmdir(extract_folder)

 # --- ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á encoding ‡∏à‡∏≤‡∏Å CSV ‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î ---
        data = []
        csv_path = os.path.join(download_path, new_name)

        # ‡∏•‡∏≠‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ encoding ‡∏ï‡πà‡∏≤‡∏á ‡πÜ
        encodings_to_try = ['utf-8', 'utf-8-sig', 'cp874', 'tis-620', 'ISO-8859-11']
        for enc in encodings_to_try:
            try:
                with open(csv_path, 'r', encoding=enc) as src_file:
                    lines = src_file.readlines()
                    print(f"‚úÖ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏î‡πâ‡∏ß‡∏¢ encoding: {enc}")
                    break
            except UnicodeDecodeError as e:
                print(f"‚ùå ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢ encoding: {enc} ‚Üí {e}")
                lines = None

       # ‡∏ñ‡πâ‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‚Üí ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏î 2 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å
        if lines:
            lines = lines[2:]  # üî• ‡∏•‡∏ö 2 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å

            with open(csv_path, 'w', encoding='utf-8', newline='') as dst_file:
                dst_file.writelines(lines)
            print(f"üìÑ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢ UTF-8 ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏•‡∏ö 2 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å ‚Üí {csv_path}")

            # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤ data
            with open(csv_path, 'r', encoding='utf-8') as csv_file:
                csv_reader = csv.reader(csv_file)
                for row in csv_reader:
                    data.append(row)
        else:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏™‡∏±‡∏Å encoding")




    
                    





















    # page.pause() # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à //////////
    # ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞ logout
    page.get_by_role("button", name="logout").click()
    # page.get_by_role("img", name="close").click()
    # page.get_by_role("button", name="logout").click()





    # ---------------------
    context.close()
    browser.close()






   


if __name__ == "__main__":
    with sync_playwright() as playwright:
        run(playwright, "PMSMK02", "JANJAW555", "PKGC007837", "4126048820")


    
 

